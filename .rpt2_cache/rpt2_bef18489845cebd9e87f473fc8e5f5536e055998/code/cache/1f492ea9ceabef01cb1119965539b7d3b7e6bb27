{"map":"{\"version\":3,\"file\":\"request-wx.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/request-wx.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { __assign } from \"tslib\";\r\nexport var NET_ERR_NO = -11;\r\nexport var SERVICE_ERR_NO = -10;\r\n/**\r\n * @param {*} type 请求的类型\r\n * @param {*} configs 请求的通用配置项\r\n * @param {*} url 请求的路由\r\n * @param {*} params 请求的参数\r\n */\r\nvar httpRequest = function (wx, type, configs) { return function (url, params, requestOptions) {\r\n    var _a = configs || {}, _b = _a.header, header = _b === void 0 ? {} : _b, _c = _a.successCondition, successCondition = _c === void 0 ? function (res) { return res && res.data && res.data.errno === 0; } : _c, _d = _a.isShowErrorMessage, isShowErrorMessage = _d === void 0 ? true : _d, _e = _a.commonParams, commonParams = _e === void 0 ? {} : _e, _f = _a.baseUrl, baseUrl = _f === void 0 ? '' : _f, _g = _a.getErrorno, getErrorno = _g === void 0 ? function (res) { return res && res.data && res.data.errno; } : _g, _h = _a.getErrorMsg, getErrorMsg = _h === void 0 ? function (res) { return res && res.data && res.data.errmsg; } : _h;\r\n    var _j = requestOptions || {}, _k = _j.requestHeaders, requestHeaders = _k === void 0 ? {} : _k, _l = _j.isShowLoading, isShowLoading = _l === void 0 ? false : _l;\r\n    return new Promise(function (resolve, reject) {\r\n        isShowLoading && wx.showLoading({ title: '加载中' });\r\n        wx.request({\r\n            url: \"\" + baseUrl + url,\r\n            method: type || 'GET',\r\n            data: Object.assign(commonParams, params || {}),\r\n            header: __assign(__assign({}, header), requestHeaders),\r\n            success: function (res) {\r\n                var errMessage = {};\r\n                if (successCondition(res)) {\r\n                    // http code 200\r\n                    resolve(res.data); // 直接将服务器返回的数据抛出\r\n                }\r\n                else {\r\n                    errMessage.errno = getErrorno(res) || SERVICE_ERR_NO;\r\n                    errMessage.errmsg = getErrorMsg(res) || '网络错误';\r\n                    reject(errMessage);\r\n                }\r\n                if (errMessage.errmsg && isShowErrorMessage) {\r\n                    wx.showToast({\r\n                        title: errMessage.errmsg,\r\n                        icon: 'none',\r\n                    });\r\n                }\r\n            },\r\n            fail: function (err) {\r\n                reject({ errno: NET_ERR_NO, errmsg: err.errMsg });\r\n                isShowErrorMessage && wx.showToast({\r\n                    title: '请求异常',\r\n                    icon: 'none',\r\n                });\r\n            },\r\n            complete: function () {\r\n                isShowLoading && wx.hideLoading();\r\n            }\r\n        });\r\n    });\r\n}; };\r\nexport default httpRequest;\r\n//# sourceMappingURL=request-wx.js.map","dts":{"name":"/Users/sf/Documents/code/request-wx/dist/types/request-wx.d.ts","writeByteOrderMark":false,"text":"interface Response {\r\n    [key: string]: any;\r\n}\r\ninterface RequestConfigs {\r\n    header?: Record<string, string | number>;\r\n    successCondition?: (res: Response) => boolean;\r\n    isShowErrorMessage?: boolean;\r\n    commonParams?: Record<string, any>;\r\n    baseUrl?: string;\r\n    getErrorno?: (res: Response) => number | string;\r\n    getErrorMsg?: (res: Response) => string;\r\n}\r\ninterface RequestOptions {\r\n    requestHeaders?: Record<string, string | number>;\r\n    isShowLoading?: boolean;\r\n}\r\ndeclare type RequestMethod = 'OPTIONS' | 'GET' | 'HEAD' | 'POST' | 'PUT' | 'DELETE' | 'TRACE' | 'CONNECT';\r\nexport declare const NET_ERR_NO = -11;\r\nexport declare const SERVICE_ERR_NO = -10;\r\n/**\r\n * @param {*} type 请求的类型\r\n * @param {*} configs 请求的通用配置项\r\n * @param {*} url 请求的路由\r\n * @param {*} params 请求的参数\r\n */\r\ndeclare const httpRequest: (wx: Record<string, any>, type: RequestMethod, configs?: RequestConfigs | undefined) => (url: string, params?: Record<string, any> | undefined, requestOptions?: RequestOptions | undefined) => Promise<unknown>;\r\nexport default httpRequest;\r\n"}}
